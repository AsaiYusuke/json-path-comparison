#!/bin/bash
set -euo pipefail

readonly results_dir="$1"
readonly consensus_dir="$2"

. src/shared.sh

all_queries() {
    find ./queries -type d -maxdepth 1 -mindepth 1 -print0 | xargs -0 -n1 basename | sort
}

gold_standard() {
    local query="$1"
    local matching_implementations="${consensus_dir}/${query}"
    local first_matching_implementation
    first_matching_implementation="$(head -1 < "$matching_implementations")"

    query_result_payload "${results_dir}/${query}/${first_matching_implementation}"
}

query_entry() {
    local query="$1"
    local matching_implementations="${consensus_dir}/${query}"
    local consensus

    echo "  - id: ${query}"
    echo -n "    selector: "
    cat "./queries/${query}/selector"
    echo -n "    document: "
    ./src/oneliner_json.py < "./queries/${query}/document.json"

    if [[ -f "./queries/${query}/ALLOW_UNORDERED" ]]; then
        echo "    ordered: false"
    fi


    if [[ -s "$matching_implementations" ]]; then
        consensus="$(gold_standard "$query")"
        echo -n "    consensus: "
        ./src/oneliner_json.py <<< "$consensus"
        if [[ -f "./queries/${query}/SCALAR_RESULT" ]]; then
            echo -n "    scalar-consensus: "
            ./src/unwrap_scalar.py <<< "$consensus" | ./src/oneliner_json.py
        fi
    fi
}

main() {
    local query

    echo "# This file was generated by src/compile_regression_suite.sh from https://github.com/cburgmer/json-path-comparison/"
    echo "# You probably don't want to change this manually."
    echo
    echo "# This file contains all queries implemented by the comparison and holds all consensus results where such a"
    echo "# consensus exist."
    echo "# It can be used to track regressions in implementations. This file can be complemented with the report specifically"
    echo "# generated for each implementation."
    echo
    echo "# If a query holds a scalar result a consensus is given for both the list and the scalar response."
    echo

    echo "queries:"
    while IFS= read -r query; do
        query_entry "$query"
    done <<< "$(all_queries)"
}

main
