#!/bin/bash
set -euo pipefail

readonly consensus_dir="$1"

all_queries() {
    find ./queries -type d -maxdepth 1 -mindepth 1 -print0 | xargs -0 -n1 basename | sort
}

# https://github.com/cburgmer/json-path-comparison/issues/1
needs_workaround_for_unknown_scalar_consensus() {
    local query="$1"
    local consensus="$2"
    test -f "./queries/${query}/SCALAR_RESULT" && test "$(cat "$consensus")" == "[]"
}

has_consensus() {
    local query="$1"
    test -s "${consensus_dir}/${query}"
}

in_quotes() {
    echo -n '"'
    sed 's/\\/\\\\/g' | sed 's/"/\\"/g' | tr -d '\n'
    echo -n '"'
}

query_entry() {
    local query="$1"
    local consensus

    echo "  - id: ${query}"
    echo "    selector: $(in_quotes < "./queries/${query}/selector")"
    echo -n "    document: "
    ./src/oneliner_json.py < "./queries/${query}/document.json"

    if [[ -f "./queries/${query}/ALLOW_UNORDERED" ]]; then
        echo "    ordered: false"
    fi


    if has_consensus "$query"; then
        consensus="${consensus_dir}/${query}"
        if ! needs_workaround_for_unknown_scalar_consensus "$query" "$consensus"; then
            echo -n "    consensus: "
            ./src/oneliner_json.py < "$consensus"
            if [[ -f "./queries/${query}/SCALAR_RESULT" ]]; then
                echo -n "    scalar-consensus: "
                ./src/unwrap_scalar.py < "$consensus" | ./src/oneliner_json.py
            fi
        fi
    fi
}

main() {
    local query

    echo "# This file was generated by src/compile_regression_suite.sh from https://github.com/cburgmer/json-path-comparison/"
    echo "# You probably don't want to change this manually."
    echo
    echo "# This file contains all queries implemented by the comparison and holds all consensus results where such a"
    echo "# consensus exist."
    echo "# It can be used to track regressions in implementations. This file can be complemented with the report specifically"
    echo "# generated for each implementation."
    echo
    echo "# If a query holds a scalar result a consensus is given for both the list and the scalar response."
    echo

    echo "queries:"
    while IFS= read -r query; do
        query_entry "$query"
    done <<< "$(all_queries)"
}

main
